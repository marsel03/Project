[{"D:\\Skripsi Marsel\\Project\\src\\index.js":"1","D:\\Skripsi Marsel\\Project\\src\\containers\\pages\\App\\index.js":"2","D:\\Skripsi Marsel\\Project\\src\\config\\firebase\\index.js":"3","D:\\Skripsi Marsel\\Project\\src\\containers\\pages\\Register\\index.js":"4","D:\\Skripsi Marsel\\Project\\src\\containers\\pages\\Dashboard\\index.js":"5","D:\\Skripsi Marsel\\Project\\src\\containers\\pages\\Login\\index.js":"6","D:\\Skripsi Marsel\\Project\\src\\config\\redux\\index.js":"7","D:\\Skripsi Marsel\\Project\\src\\config\\redux\\store\\index.js":"8","D:\\Skripsi Marsel\\Project\\src\\config\\redux\\reducer\\index.js":"9","D:\\Skripsi Marsel\\Project\\src\\components\\atoms\\Button\\index.js":"10","D:\\Skripsi Marsel\\Project\\src\\config\\redux\\action\\index.js":"11"},{"size":661,"mtime":1607259869477,"results":"12","hashOfConfig":"13"},{"size":621,"mtime":1607258787342,"results":"14","hashOfConfig":"13"},{"size":632,"mtime":1607259781078,"results":"15","hashOfConfig":"13"},{"size":1742,"mtime":1607424492534,"results":"16","hashOfConfig":"13"},{"size":4050,"mtime":1607425656449,"results":"17","hashOfConfig":"13"},{"size":1877,"mtime":1607265234359,"results":"18","hashOfConfig":"13"},{"size":26,"mtime":1607245529333,"results":"19","hashOfConfig":"13"},{"size":191,"mtime":1607248598535,"results":"20","hashOfConfig":"13"},{"size":881,"mtime":1607267059267,"results":"21","hashOfConfig":"13"},{"size":279,"mtime":1607250014758,"results":"22","hashOfConfig":"13"},{"size":3329,"mtime":1607425660868,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"7vt0gb",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"D:\\Skripsi Marsel\\Project\\src\\index.js",["49","50","51"],"import React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/pages/App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from './config/firebase';\nimport { createStore } from 'redux'\n\n\n// console.log('config firebase ==> ',firebase)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["52","53"],"D:\\Skripsi Marsel\\Project\\src\\containers\\pages\\App\\index.js",["54"],"D:\\Skripsi Marsel\\Project\\src\\config\\firebase\\index.js",[],"D:\\Skripsi Marsel\\Project\\src\\containers\\pages\\Register\\index.js",[],"D:\\Skripsi Marsel\\Project\\src\\containers\\pages\\Dashboard\\index.js",["55"],"D:\\Skripsi Marsel\\Project\\src\\containers\\pages\\Login\\index.js",[],"D:\\Skripsi Marsel\\Project\\src\\config\\redux\\index.js",[],"D:\\Skripsi Marsel\\Project\\src\\config\\redux\\store\\index.js",[],"D:\\Skripsi Marsel\\Project\\src\\config\\redux\\reducer\\index.js",[],"D:\\Skripsi Marsel\\Project\\src\\components\\atoms\\Button\\index.js",[],"D:\\Skripsi Marsel\\Project\\src\\config\\redux\\action\\index.js",["56"],"import firebase, {database} from '../../firebase';\r\n\r\nexport const actionUserName = () => (dispatch) => {\r\n    setTimeout(() => {\r\n        return dispatch({type: 'CHANGE_USER', value: 'marsel dien'})\r\n    },2000)\r\n}\r\n\r\nexport const registerUserAPI = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n    dispatch({type: 'CHANGE_LOADING', value: true})\r\n        firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\r\n        .then(res => {\r\n            console.log('success: ', res)\r\n            dispatch({type: 'CHANGE_LOADING', value: false})\r\n            resolve(true)\r\n        })\r\n        .catch(function(error) {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            console.log(errorCode, errorMessage)\r\n            dispatch({type: 'CHANGE_LOADING', value: false})\r\n            reject(false)\r\n        })\r\n    })\r\n}\r\n\r\nexport const loginUserAPI = (data) => (dispatch) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        dispatch({type: 'CHANGE_LOADING', value: true})\r\n        firebase.auth().signInWithEmailAndPassword(data.email, data.password)            \r\n        .then(res => {\r\n            // console.log('success: ', res)\r\n            const dataUser = {\r\n                email: res.user.email,\r\n                uid: res.user.uid,\r\n                emailVerified: res.user.emailVerified,\r\n                refreshToken: res.user.refreshToken\r\n            }\r\n            dispatch({type: 'CHANGE_LOADING', value: false})\r\n            dispatch({type: 'CHANGE_ISLOGIN', value: true})\r\n            dispatch({type: 'CHANGE_USER', value: dataUser})\r\n            resolve(dataUser)\r\n        })\r\n        .catch(function(error) {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            console.log(errorCode, errorMessage)\r\n            dispatch({type: 'CHANGE_LOADING', value: false})\r\n            dispatch({type: 'CHANGE_ISLOGIN', value: false})\r\n            reject(false)\r\n        })\r\n    })\r\n}\r\n\r\nexport const addDataToAPI = (data) => (dispatch) => {\r\n    database.ref('notes/' + data.userId).push({\r\n        title: data.title,\r\n        content: data.content,\r\n        date: data.date    \r\n    })\r\n}\r\n\r\nexport const getDataFromAPI = (userId) => (dispatch) =>{\r\n    const urlNotes = database.ref('notes/' + userId);\r\n    return new Promise((resolve, reject) => {\r\n        urlNotes.on('value', (snapshot) => {\r\n            console.log('get Data: ',snapshot.val());\r\n            const data = [];\r\n            Object.keys(snapshot.val()).map(key => {\r\n                data.push({\r\n                    id: key,\r\n                    data: snapshot.val()[key]\r\n                })\r\n            });\r\n            dispatch({type: 'SET_NOTES', value: data})\r\n            resolve(snapshot.val())\r\n        });\r\n    })\r\n}\r\n\r\nexport const updateDataAPI = (data) => (dispatch) =>{\r\n    const urlNotes = database.ref(`notes/${data.userId}/${data.noteId}`);\r\n    return new Promise((resolve, reject) => {\r\n        urlNotes.set({\r\n            title: data.title,\r\n            content: data.content,\r\n            date: data.date\r\n        }, (err) => {\r\n            if(err){\r\n                reject(false);\r\n            }else{\r\n                resolve(true);\r\n            }\r\n        });\r\n    })\r\n}",{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":27},{"ruleId":"57","severity":1,"message":"61","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":16},{"ruleId":"57","severity":1,"message":"62","line":7,"column":10,"nodeType":"59","messageId":"60","endLine":7,"endColumn":21},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"57","severity":1,"message":"67","line":2,"column":42,"nodeType":"59","messageId":"60","endLine":2,"endColumn":46},{"ruleId":"68","severity":1,"message":"69","line":76,"column":100,"nodeType":"70","endLine":76,"endColumn":122},{"ruleId":"71","severity":1,"message":"72","line":71,"column":49,"nodeType":"73","messageId":"74","endLine":71,"endColumn":51},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'createStore' is defined but never used.","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'Link' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]